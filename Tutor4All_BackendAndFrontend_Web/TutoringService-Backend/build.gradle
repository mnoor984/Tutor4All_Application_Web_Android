plugins {
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'application'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.12'
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    testImplementation('org.mockito:mockito-core:2.+')
  	testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')
  	testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: "1.3.1"
}

task compile(type: JavaCompile) {
  classpath = sourceSets.main.compileClasspath
  classpath += sourceSets.test.runtimeClasspath
  sourceSets.test.java.outputDir = file('build/bin')
  sourceSets.main.java.outputDir = file('build/bin')
}

/*
 * specifying sourceSets is not necessary in this case, since
 * we are applying the default folder structure assumed by Gradle
 */
sourceSets {
  main {
    java { srcDir 'src/main/java' }
    resources {srcDir 'src/main/resources' }
  }
  test {
    java { srcDir 'src/test/java'}
  }  
}

mainClassName='ca.mcgill.ecse321.tutoringservice.TutoringServiceApplication'
